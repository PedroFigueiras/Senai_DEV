{"ast":null,"code":"import axios from \"axios\";\nexport const LerConteudoDaImagem = async formData => {\n  let resultado;\n  await axios({\n    method: \"POST\",\n    url: \"https://OCRPedroF.cognitiveservices.azure.com/vision/v3.2/ocr?language=unk&detectOrientation=true&model-version=latest\",\n    data: formData,\n    headers: {\n      \"Content-Type\": \"multipart/form/data\",\n      \"Ocp-Apim-Subscription-Key\": \"0a0c595a03254ba4a53778d476323b75\"\n    }\n  }).then(response => {\n    // console.log(response)\n    resultado = FiltrarOBJ(response.data);\n  }).catch(erro => console.log(erro));\n  return resultado;\n}; // Serve pra certificar todas as linhas e verificar informações pertinentes\n\n_c = LerConteudoDaImagem;\nexport const FiltrarOBJ = obj => {\n  let resultado;\n  obj.regions.forEach(region => {\n    region.lines.forEach(line => {\n      line.words.forEach(word => {\n        if (word.text[0] === \"1\" && word.text[1] === \"2\") {\n          resultado = word.text;\n        }\n      });\n    });\n  });\n  return resultado;\n};\n_c2 = FiltrarOBJ;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LerConteudoDaImagem\");\n$RefreshReg$(_c2, \"FiltrarOBJ\");","map":{"version":3,"sources":["C:/Users/54667532890.INFOSCS/Desktop/projetos/2022_3T_ProjetoBase_Frontend/src/services/ocr.js"],"names":["axios","LerConteudoDaImagem","formData","resultado","method","url","data","headers","then","response","FiltrarOBJ","catch","erro","console","log","obj","regions","forEach","region","lines","line","words","word","text"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,QAAP,IAAoB;AAGnD,MAAIC,SAAJ;AAEA,QAAOH,KAAK,CAAC;AACTI,IAAAA,MAAM,EAAG,MADA;AAETC,IAAAA,GAAG,EAAG,wHAFG;AAGTC,IAAAA,IAAI,EAAGJ,QAHE;AAITK,IAAAA,OAAO,EAAG;AACF,sBAAiB,qBADf;AAEF,mCAA8B;AAF5B;AAJD,GAAD,CAAL,CAWNC,IAXM,CAWDC,QAAQ,IAAI;AACd;AACAN,IAAAA,SAAS,GAAGO,UAAU,CAACD,QAAQ,CAACH,IAAV,CAAtB;AACH,GAdM,EAeNK,KAfM,CAeAC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAfR,CAAP;AAiBA,SAAOT,SAAP;AAGH,CAzBM,C,CA0BP;;KA1BaF,mB;AA2Bb,OAAO,MAAMS,UAAU,GAAIK,GAAD,IAAS;AAE/B,MAAIZ,SAAJ;AAEAY,EAAAA,GAAG,CAACC,OAAJ,CAAYC,OAAZ,CAAoBC,MAAM,IAAI;AAC1BA,IAAAA,MAAM,CAACC,KAAP,CAAaF,OAAb,CAAqBG,IAAI,IAAI;AACzBA,MAAAA,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAmBK,IAAI,IAAI;AACvB,YAAGA,IAAI,CAACC,IAAL,CAAU,CAAV,MAAiB,GAAjB,IAAwBD,IAAI,CAACC,IAAL,CAAU,CAAV,MAAiB,GAA5C,EAAgD;AAC5CpB,UAAAA,SAAS,GAAGmB,IAAI,CAACC,IAAjB;AACH;AACJ,OAJD;AAKH,KAND;AASH,GAVD;AAYA,SAAOpB,SAAP;AACH,CAjBM;MAAMO,U","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const LerConteudoDaImagem = async (formData) => {\r\n\r\n\r\n    let resultado;\r\n\r\n    await  axios({\r\n        method : \"POST\",\r\n        url : \"https://OCRPedroF.cognitiveservices.azure.com/vision/v3.2/ocr?language=unk&detectOrientation=true&model-version=latest\",\r\n        data : formData,\r\n        headers : {\r\n                \"Content-Type\" : \"multipart/form/data\",\r\n                \"Ocp-Apim-Subscription-Key\" : \"0a0c595a03254ba4a53778d476323b75\"\r\n        }\r\n\r\n    })\r\n\r\n    .then(response => {\r\n        // console.log(response)\r\n        resultado = FiltrarOBJ(response.data);\r\n    })\r\n    .catch(erro => console.log(erro))\r\n\r\n    return resultado; \r\n\r\n\r\n}\r\n// Serve pra certificar todas as linhas e verificar informações pertinentes\r\nexport const FiltrarOBJ = (obj) => {\r\n\r\n    let resultado;\r\n\r\n    obj.regions.forEach(region => {\r\n        region.lines.forEach(line => {\r\n            line.words.forEach(word => {\r\n                if(word.text[0] === \"1\" && word.text[1] === \"2\"){\r\n                    resultado = word.text;\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n    });\r\n\r\n    return resultado;\r\n}"]},"metadata":{},"sourceType":"module"}