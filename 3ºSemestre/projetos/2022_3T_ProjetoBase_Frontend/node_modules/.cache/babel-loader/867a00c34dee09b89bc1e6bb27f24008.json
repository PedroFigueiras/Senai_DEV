{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\54667532890.INFOSCS\\\\Desktop\\\\3-SemestreSenai\\\\projetos\\\\2022_3T_ProjetoBase_Frontend\\\\src\\\\pages\\\\login\\\\login.jsx\";\nimport { Component } from 'react';\nimport axios from 'axios';\nimport { parseJwt, usuarioAutenticado } from '../../services/auth';\nimport { Link } from 'react-router-dom';\nimport '../../assets/css/login.css';\nimport logo from '../../assets/img/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.efetuaLogin = event => {\n      // ignora o comportamento padrão do navegador (recarregar a página, por exemplo)\n      event.preventDefault();\n      this.setState({\n        erroMensagem: '',\n        isLoading: true\n      });\n      axios.post('http://localhost:5000/api/Login', {\n        email: this.state.email,\n        senha: this.state.senha\n      }) // recebe todo o conteúdo da resposta da requisição na variável resposta\n      .then(resposta => {\n        // verifico se o status code dessa resposta é igual a 200\n        if (resposta.status === 200) {\n          // se sim, exibe no console do navegador o token do usuário logado,\n          // console.log('Meu token é: ' + resposta.data.token);\n          // salva o valor do token no localStorage\n          localStorage.setItem('usuario-login', resposta.data.token); // e define que a requisição terminou\n\n          this.setState({\n            isLoading: false\n          }); // define a variável base64 que vai receber o payload do token\n\n          let base64 = localStorage.getItem('usuario-login').split('.')[1]; // exibe no console do navegador o valor em base64\n\n          console.log(base64); // exibe no console o valor decodificado de base64 para string\n          // console.log(window.atob(base64));\n          // exibe no console do navegador o valor da chave role\n          // console.log( JSON.parse( window.atob(base64) ) );\n          // console.log( parseJwt().role );\n          // exibe as propriedades da página\n\n          console.log(parseJwt()); // verifica se o usuário logado é do tipo administrador\n          //mudar aqui e no menu principal se o cadastro for liberado para\n          //todos os usuarios\n\n          if (parseJwt().role === '1') {\n            this.props.history.push('/patrimonio');\n            console.log('estou logado: ' + usuarioAutenticado());\n          } else {\n            this.props.history.push('/meusEventos');\n          }\n        }\n      }) // Caso haja um erro,\n      .catch(() => {\n        // define o valor do state erroMensagem com uma mensagem personalizada\n        this.setState({\n          erroMensagem: 'E-mail e/ou senha inválidos!',\n          isLoading: false\n        });\n      });\n    };\n\n    this.atualizaStateCampo = campo => {\n      // quando estiver digitando no campo username\n      //                     email        :       adm@adm.com\n      // quando estiver digitando no campo password\n      //                     senha        :        senha123\n      this.setState({\n        [campo.target.name]: campo.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      senha: '',\n      erroMensagem: '',\n      isLoading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container-login flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img__login\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img__overlay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item__login\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: logo,\n                    className: \"icone__login\",\n                    alt: \"logo da Patrimonio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 46\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item\",\n                id: \"item__title\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text__login\",\n                  id: \"item__description\",\n                  children: \"Bem-vindo! Fa\\xE7a login para acessar sua conta.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.efetuaLogin,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input__login\" // e-mail\n                    ,\n                    type: \"text\",\n                    name: \"email\" // define que o input email recebe o valor do state email\n                    ,\n                    value: this.state.email // faz a chamada para a função que atualiza o state, conforme o usuário altera o valor do input\n                    ,\n                    onChange: this.atualizaStateCampo,\n                    placeholder: \"email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input__login\" // senha\n                    ,\n                    type: \"password\",\n                    name: \"senha\" // define que o input senha recebe o valor do state senha\n                    ,\n                    value: this.state.senha // faz a chamada para a função que atualiza o state, conforme o usuário altera o valor do input\n                    ,\n                    onChange: this.atualizaStateCampo,\n                    placeholder: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: 'red'\n                    },\n                    children: this.state.erroMensagem\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 41\n                  }, this), // Caso seja true, renderiza o botão desabilitado com o texto 'Loading...'\n                  this.state.isLoading === true && /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    disabled: true,\n                    className: \"btn btn__login\",\n                    id: \"btn__login\",\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this), // Caso seja false, renderiza o botão habilitado com o texto 'Login'\n                  this.state.isLoading === false && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn__login\",\n                    id: \"btn__login\",\n                    type: \"submit\",\n                    disabled: this.state.email === '' || this.state.senha === '' ? 'none' : '',\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/54667532890.INFOSCS/Desktop/3-SemestreSenai/projetos/2022_3T_ProjetoBase_Frontend/src/pages/login/login.jsx"],"names":["Component","axios","parseJwt","usuarioAutenticado","Link","logo","Login","constructor","props","efetuaLogin","event","preventDefault","setState","erroMensagem","isLoading","post","email","state","senha","then","resposta","status","localStorage","setItem","data","token","base64","getItem","split","console","log","role","history","push","catch","atualizaStateCampo","campo","target","name","value","render","color"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { parseJwt, usuarioAutenticado } from '../../services/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../../assets/css/login.css';\r\n\r\nimport logo from '../../assets/img/logo.png';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            senha: '',\r\n            erroMensagem: '',\r\n            isLoading: false\r\n        };\r\n    };\r\n\r\n    // Função que faz a chamada para a API para realiza o login\r\n    efetuaLogin = (event) => {\r\n        // ignora o comportamento padrão do navegador (recarregar a página, por exemplo)\r\n        event.preventDefault();\r\n\r\n        this.setState({ erroMensagem: '', isLoading: true });\r\n\r\n        axios.post('http://localhost:5000/api/Login', {\r\n            email: this.state.email,\r\n            senha: this.state.senha\r\n        })\r\n\r\n            // recebe todo o conteúdo da resposta da requisição na variável resposta\r\n            .then(resposta => {\r\n                // verifico se o status code dessa resposta é igual a 200\r\n                if (resposta.status === 200) {\r\n                    // se sim, exibe no console do navegador o token do usuário logado,\r\n                    // console.log('Meu token é: ' + resposta.data.token);\r\n                    // salva o valor do token no localStorage\r\n                    localStorage.setItem('usuario-login', resposta.data.token);\r\n                    // e define que a requisição terminou\r\n                    this.setState({ isLoading: false });\r\n\r\n                    // define a variável base64 que vai receber o payload do token\r\n                    let base64 = localStorage.getItem('usuario-login').split('.')[1];\r\n                    // exibe no console do navegador o valor em base64\r\n                    console.log(base64);\r\n\r\n                    // exibe no console o valor decodificado de base64 para string\r\n                    // console.log(window.atob(base64));\r\n\r\n                    // exibe no console do navegador o valor da chave role\r\n                    // console.log( JSON.parse( window.atob(base64) ) );\r\n\r\n                    // console.log( parseJwt().role );\r\n\r\n                    // exibe as propriedades da página\r\n                    console.log(parseJwt());\r\n\r\n                    // verifica se o usuário logado é do tipo administrador\r\n                    //mudar aqui e no menu principal se o cadastro for liberado para\r\n                    //todos os usuarios\r\n                    if (parseJwt().role === '1' ) {\r\n                        this.props.history.push('/patrimonio');\r\n                        console.log('estou logado: ' + usuarioAutenticado())\r\n                    }\r\n\r\n                    else{\r\n                        this.props.history.push('/meusEventos');\r\n                    }\r\n                }\r\n            })\r\n\r\n            // Caso haja um erro,\r\n            .catch(() => {\r\n                // define o valor do state erroMensagem com uma mensagem personalizada\r\n                this.setState({ erroMensagem: 'E-mail e/ou senha inválidos!', isLoading: false })\r\n            })\r\n    };\r\n\r\n    atualizaStateCampo = (campo) => {\r\n        // quando estiver digitando no campo username\r\n        //                     email        :       adm@adm.com\r\n\r\n        // quando estiver digitando no campo password\r\n        //                     senha        :        senha123\r\n        this.setState({ [campo.target.name]: campo.target.value })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <main>\r\n                    <section className=\"container-login flex\">\r\n                        <div className=\"img__login\"><div className=\"img__overlay\"></div></div>\r\n\r\n                        <div className=\"item__login\">\r\n                            <div className=\"row\">\r\n                                <div className=\"item\">\r\n                                <Link to=\"/\"><img src={logo} className=\"icone__login\" alt=\"logo da Patrimonio\" /> </Link>\r\n                                </div>\r\n                                <div className=\"item\" id=\"item__title\">\r\n                                    <p className=\"text__login\" id=\"item__description\">\r\n                                        Bem-vindo! Faça login para acessar sua conta.\r\n                                    </p>\r\n                                </div>\r\n\r\n                                {/* Faz a chamada para a função de login quando o botão é pressionado */}\r\n\r\n                                <form onSubmit={this.efetuaLogin}>\r\n                                    <div className=\"item\">\r\n                                        <input\r\n                                            className=\"input__login\"\r\n                                            // e-mail\r\n                                            type=\"text\"\r\n                                            name=\"email\"\r\n                                            // define que o input email recebe o valor do state email\r\n                                            value={this.state.email}\r\n                                            // faz a chamada para a função que atualiza o state, conforme o usuário altera o valor do input\r\n                                            onChange={this.atualizaStateCampo}\r\n                                            placeholder=\"email\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                        <input\r\n                                            className=\"input__login\"\r\n                                            // senha\r\n                                            type=\"password\"\r\n                                            name=\"senha\"\r\n                                            // define que o input senha recebe o valor do state senha\r\n                                            value={this.state.senha}\r\n                                            // faz a chamada para a função que atualiza o state, conforme o usuário altera o valor do input\r\n                                            onChange={this.atualizaStateCampo}\r\n                                            placeholder=\"password\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n\r\n                                        {/* Exibe a mensagem de erro ao tentar logar com credenciais inválidas */}\r\n                                        <p style={{ color : 'red' }} >{this.state.erroMensagem}</p>\r\n\r\n                                        {/* \r\n                                            Verifica se a requisição está em andamento\r\n                                            Se estiver, desabilita o click do botão\r\n                                        */}\r\n\r\n                                        {\r\n                                            // Caso seja true, renderiza o botão desabilitado com o texto 'Loading...'\r\n                                            this.state.isLoading === true &&\r\n                                            <button type=\"submit\" disabled className=\"btn btn__login\" id=\"btn__login\">\r\n                                                Loading...\r\n                                            </button>\r\n                                        }\r\n\r\n                                        {\r\n                                            // Caso seja false, renderiza o botão habilitado com o texto 'Login'\r\n                                            this.state.isLoading === false &&\r\n                                            <button \r\n                                                className=\"btn btn__login\" id=\"btn__login\"\r\n                                                type=\"submit\"\r\n                                                disabled={ this.state.email === '' || this.state.senha === '' ? 'none' : '' }>\r\n                                                Login\r\n                                            </button>\r\n                                        }\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n\r\n            </div>\r\n        )\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}