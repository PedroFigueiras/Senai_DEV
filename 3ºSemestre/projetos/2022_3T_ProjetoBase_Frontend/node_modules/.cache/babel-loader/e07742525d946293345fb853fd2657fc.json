{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\54667532890.INFOSCS\\\\Desktop\\\\3-SemestreSenai\\\\projetos\\\\2022_3T_ProjetoBase_Frontend\\\\src\\\\pages\\\\usuario\\\\usuario.jsx\";\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/img/logo.png';\nimport Rodape from '../../components/rodape/rodape';\nimport Titulo from '../../components/titulo/titulo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Usuario extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buscarTipoEventos = () => {\n      //funcao nativa JS, ele é uma API com métodos.\n      //dentro dos parenteses vamos informar qual é o end point.\n      fetch('http://localhost:5000/api/Usuario', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('usuario-login')\n        }\n      }) //por padrao ele sempre inicia como GET.\n      .then(resposta => resposta.json()) //.then( dados => console.log(dados.json()))\n      // quando vc tiver uma retorno, vc vai trazer essa resposta em json.\n      // Define o tipo de dados do retorno da requisicao como JSON.\n      // .then( resposta => resposta.json())\n      // Atualiza o state listaUsuario com os dados obtidos em formato json.\n      .then(dados => this.setState({\n        listaUsuario: dados\n      })) //caso ocorre algum erro, mostra no console do navegador\n      .catch(erro => console.log(erro));\n    };\n\n    this.atualizaEstadoTitulo = async event => {\n      //console.log('acionou essa funcao')\n      await this.setState({\n        //dizendo que o target (alvo) do evento ,  vamos pegar o value(valor)\n        titulo: event.target.value\n      });\n      console.log(this.state.titulo);\n    };\n\n    this.manipularTipoEvento = submit_formulario => {\n      submit_formulario.preventDefault();\n      console.log(JSON.stringify({\n        tituloTipoEvento: this.state.titulo\n      })); // Caso algum Usuario seja selecionado para edição,\n\n      if (this.state.idTipoEventoAlterado !== 0) {\n        // faz a chamada para a API usando fetch e passando o ID do Usuario que será atualizado na URL da requisição\n        fetch('http://localhost:5000/api/Usuario/' + this.state.idTipoEventoAlterado, {\n          // Define o método da requisição ( PUT )\n          method: 'PUT',\n          // Define o corpo da requisição especificando o tipo ( JSON )\n          body: JSON.stringify({\n            tituloTipoEvento: this.state.titulo\n          }),\n          // Define o cabeçalho da requisição\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + localStorage.getItem('usuario-login')\n          }\n        }).then(resposta => {\n          // Caso a requisição retorne um status code 204,\n          if (resposta.status === 204) {\n            console.log( // Exibe no console do navegador a mensagem abaixo\n            'O Usuario ' + this.state.idTipoEventoAlterado + ' foi atualizado!', // e informa qual é seu novo título\n            'Seu novo título agora é: ' + this.state.titulo);\n          }\n        }) // caso ocorra algum erro, mostra no console do navegador.\n        .catch(erro => console.log(erro)) // Então, atualiza a lista de Tipos de Eventos\n        // sem o usuário precisar executar outra ação\n        .then(this.buscarTipoEventos).then(this.limparCampos);\n      } else {\n        fetch('http://localhost:5000/api/Usuario', {\n          method: 'POST',\n          body: JSON.stringify({\n            tituloTipoEvento: this.state.titulo\n          }),\n          //lembrado que aqui e um obj js e nao json.\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + localStorage.getItem('usuario-login')\n          }\n        }) //Exibe no console a msg \"Usuario cadastrado\"\n        .then(console.log('Usuario cadastrado.')) //caso ocorra algum erro, mostra no console do navegador.\n        .catch(erro => console.log(erro)).then(this.buscarTipoEventos).then(this.limparCampos);\n      }\n    };\n\n    this.buscarTipoEventoPorId = tipoEvento => {\n      this.setState({\n        // Atualiza o state idTipoEventoAlterado com o valor do ID do Usuario recebido\n        idTipoEventoAlterado: tipoEvento.idTipoEvento,\n        // e o state titulo com o valor do título do Usuario recebido\n        titulo: tipoEvento.tituloTipoEvento\n      }, () => {\n        console.log('O Usuario ' + tipoEvento.idTipoEvento + ' foi selecionado,', 'agora o valor do state idTipoEventoAlterado é: ' + this.state.idTipoEventoAlterado, 'e o valor do state título é: ' + this.state.titulo);\n      });\n    };\n\n    this.excluirTipoEvento = tipoEvento => {\n      console.log('O Usuario ' + tipoEvento.idTipoEvento + ' foi selecionado!');\n      fetch('http://localhost:5000/api/Usuario/' + tipoEvento.idTipoEvento, {\n        method: 'DELETE',\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('usuario-login')\n        }\n      }).then(resposta => {\n        if (resposta.status === 204) {\n          console.log('Usuario ' + tipoEvento.idTipoEvento + ' foi excluído!');\n        }\n      }) //caso ocorra algum erro, mostra no console do navegador.\n      .catch(erro => console.log(erro)).then(this.buscarTipoEventos);\n    };\n\n    this.limparCampos = () => {\n      this.setState({\n        titulo: '',\n        idTipoEventoAlterado: 0\n      });\n      console.log('Os states foram resetados!');\n    };\n\n    this.state = {\n      listaUsuario: [],\n      titulo: '',\n      idTipoEventoAlterado: 0,\n      titulosecao: 'Lista Usuários'\n    };\n  }\n\n  componentDidMount() {\n    this.buscarTipoEventos();\n  } // Recebe um Usuario da lista\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"cabecalhoPrincipal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              alt: \"Logo da Usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/usuario\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"cabecalhoPrincipal-nav\",\n              children: \"Usu\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/patrimonio\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"cabecalhoPrincipal-nav\",\n              children: \"Patrim\\xF4nio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"conteudoPrincipal\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"conteudoPrincipal-cadastro\",\n          children: [/*#__PURE__*/_jsxDEV(Titulo, {\n            titulosecao: this.state.titulosecao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            id: \"conteudoPrincipal-lista\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              id: \"tabela-lista\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"T\\xEDtulo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"A\\xE7\\xF5es\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                id: \"tabela-lista-corpo\",\n                children: this.state.listaUsuario.map(tipoEvento => {\n                  //console.log(tipoEvento)\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: tipoEvento.idTipoEvento\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: tipoEvento.tituloTipoEvento\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => this.buscarTipoEventoPorId(tipoEvento),\n                        children: \"Editar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => this.excluirTipoEvento(tipoEvento),\n                        children: \"Excluir\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 49\n                    }, this)]\n                  }, tipoEvento.idTipoEvento, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container\",\n          id: \"conteudoPrincipal-cadastro\",\n          children: [/*#__PURE__*/_jsxDEV(Titulo, {\n            titulosecao: \"Cadastro de Usu\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.manipularTipoEvento,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: this.state.titulo,\n                placeholder: \"T\\xEDtulo do Usuario\" //cada vez que tiver uma mudanca, (por tecla)\n                ,\n                onChange: this.atualizaEstadoTitulo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"conteudoPrincipal-btn conteudoPrincipal-btn-cadastro\",\n                disabled: this.state.titulo === '' ? 'none' : '',\n                children: this.state.idTipoEventoAlterado === 0 ? 'Cadastrar' : 'Atualizar'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"conteudoPrincipal-btn conteudoPrincipal-btn-cadastro\",\n                onClick: this.limparCampos,\n                style: {\n                  display: ''\n                },\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, this), this.state.idTipoEventoAlterado !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"O Usuario \", this.state.idTipoEventoAlterado, \" est\\xE1 sendo editado.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Clique em Cancelar caso queira cancelar a opera\\xE7\\xE3o antes de cadastrar um novo Usuario.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rodape, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/54667532890.INFOSCS/Desktop/3-SemestreSenai/projetos/2022_3T_ProjetoBase_Frontend/src/pages/usuario/usuario.jsx"],"names":["Component","Link","logo","Rodape","Titulo","Usuario","constructor","props","buscarTipoEventos","fetch","headers","Authorization","localStorage","getItem","then","resposta","json","dados","setState","listaUsuario","catch","erro","console","log","atualizaEstadoTitulo","event","titulo","target","value","state","manipularTipoEvento","submit_formulario","preventDefault","JSON","stringify","tituloTipoEvento","idTipoEventoAlterado","method","body","status","limparCampos","buscarTipoEventoPorId","tipoEvento","idTipoEvento","excluirTipoEvento","titulosecao","componentDidMount","render","map","display"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport logo from '../../assets/img/logo.png';\r\n\r\nimport Rodape from '../../components/rodape/rodape';\r\nimport Titulo from '../../components/titulo/titulo';\r\n\r\nexport default class Usuario extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listaUsuario: [],\r\n            titulo: '',\r\n            idTipoEventoAlterado: 0,\r\n            titulosecao: 'Lista Usuários',\r\n        };\r\n    }\r\n\r\n    buscarTipoEventos = () => {\r\n    \r\n\r\n        //funcao nativa JS, ele é uma API com métodos.\r\n\r\n        //dentro dos parenteses vamos informar qual é o end point.\r\n        fetch('http://localhost:5000/api/Usuario', {\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('usuario-login'),\r\n            },\r\n        })\r\n            //por padrao ele sempre inicia como GET.\r\n\r\n            .then((resposta) => resposta.json())\r\n\r\n            //.then( dados => console.log(dados.json()))\r\n\r\n            // quando vc tiver uma retorno, vc vai trazer essa resposta em json.\r\n\r\n            // Define o tipo de dados do retorno da requisicao como JSON.\r\n\r\n            // .then( resposta => resposta.json())\r\n\r\n            // Atualiza o state listaUsuario com os dados obtidos em formato json.\r\n            .then((dados) => this.setState({ listaUsuario: dados }))\r\n\r\n            //caso ocorre algum erro, mostra no console do navegador\r\n\r\n            .catch((erro) => console.log(erro));\r\n    };\r\n\r\n    //onChange vai disparar por tecla e invocar essa funcao.\r\n    atualizaEstadoTitulo = async (event) => {\r\n        //console.log('acionou essa funcao')\r\n\r\n        await this.setState({\r\n            //dizendo que o target (alvo) do evento ,  vamos pegar o value(valor)\r\n            titulo: event.target.value,\r\n        });\r\n        console.log(this.state.titulo);\r\n    };\r\n\r\n    manipularTipoEvento = (submit_formulario) => {\r\n        submit_formulario.preventDefault();\r\n\r\n        console.log(JSON.stringify({ tituloTipoEvento: this.state.titulo }));\r\n\r\n        // Caso algum Usuario seja selecionado para edição,\r\n        if (this.state.idTipoEventoAlterado !== 0) {\r\n            // faz a chamada para a API usando fetch e passando o ID do Usuario que será atualizado na URL da requisição\r\n            fetch(\r\n                'http://localhost:5000/api/Usuario/' +\r\n                this.state.idTipoEventoAlterado,\r\n                {\r\n                    // Define o método da requisição ( PUT )\r\n                    method: 'PUT',\r\n\r\n                    // Define o corpo da requisição especificando o tipo ( JSON )\r\n                    body: JSON.stringify({ tituloTipoEvento: this.state.titulo }),\r\n\r\n                    // Define o cabeçalho da requisição\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: 'Bearer ' + localStorage.getItem('usuario-login'),\r\n                    },\r\n                },\r\n            )\r\n                .then((resposta) => {\r\n                    // Caso a requisição retorne um status code 204,\r\n                    if (resposta.status === 204) {\r\n                        console.log(\r\n                            // Exibe no console do navegador a mensagem abaixo\r\n                            'O Usuario ' +\r\n                            this.state.idTipoEventoAlterado +\r\n                            ' foi atualizado!',\r\n                            // e informa qual é seu novo título\r\n                            'Seu novo título agora é: ' + this.state.titulo,\r\n                        );\r\n                    }\r\n                })\r\n\r\n                // caso ocorra algum erro, mostra no console do navegador.\r\n                .catch((erro) => console.log(erro))\r\n\r\n                // Então, atualiza a lista de Tipos de Eventos\r\n                // sem o usuário precisar executar outra ação\r\n                .then(this.buscarTipoEventos)\r\n\r\n                .then(this.limparCampos);\r\n        } else {\r\n            fetch('http://localhost:5000/api/Usuario', {\r\n                method: 'POST',\r\n\r\n                body: JSON.stringify({ tituloTipoEvento: this.state.titulo }), //lembrado que aqui e um obj js e nao json.\r\n\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + localStorage.getItem('usuario-login'),\r\n                },\r\n            })\r\n                //Exibe no console a msg \"Usuario cadastrado\"\r\n                .then(console.log('Usuario cadastrado.'))\r\n\r\n                //caso ocorra algum erro, mostra no console do navegador.\r\n                .catch((erro) => console.log(erro))\r\n\r\n                .then(this.buscarTipoEventos)\r\n\r\n                .then(this.limparCampos);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.buscarTipoEventos();\r\n    }\r\n\r\n    // Recebe um Usuario da lista\r\n    buscarTipoEventoPorId = (tipoEvento) => {\r\n        this.setState(\r\n            {\r\n                // Atualiza o state idTipoEventoAlterado com o valor do ID do Usuario recebido\r\n                idTipoEventoAlterado: tipoEvento.idTipoEvento,\r\n                // e o state titulo com o valor do título do Usuario recebido\r\n                titulo: tipoEvento.tituloTipoEvento,\r\n            },\r\n            () => {\r\n                console.log(\r\n                    'O Usuario ' + tipoEvento.idTipoEvento + ' foi selecionado,',\r\n                    'agora o valor do state idTipoEventoAlterado é: ' +\r\n                    this.state.idTipoEventoAlterado,\r\n                    'e o valor do state título é: ' + this.state.titulo,\r\n                );\r\n            },\r\n        );\r\n    };\r\n\r\n    // Função responsável por excluir um Usuario\r\n    excluirTipoEvento = (tipoEvento) => {\r\n        console.log(\r\n            'O Usuario ' + tipoEvento.idTipoEvento + ' foi selecionado!',\r\n        );\r\n\r\n        fetch('http://localhost:5000/api/Usuario/' + tipoEvento.idTipoEvento, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: 'Bearer ' + localStorage.getItem('usuario-login'),\r\n            },\r\n        })\r\n            .then((resposta) => {\r\n                if (resposta.status === 204) {\r\n                    console.log(\r\n                        'Usuario ' + tipoEvento.idTipoEvento + ' foi excluído!',\r\n                    );\r\n                }\r\n            })\r\n\r\n            //caso ocorra algum erro, mostra no console do navegador.\r\n            .catch((erro) => console.log(erro))\r\n\r\n            .then(this.buscarTipoEventos);\r\n    };\r\n\r\n    limparCampos = () => {\r\n        this.setState({\r\n            titulo: '',\r\n            idTipoEventoAlterado: 0,\r\n        });\r\n        console.log('Os states foram resetados!');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"cabecalhoPrincipal\">\r\n                    <div className=\"container\">\r\n                        <Link to=\"/\">\r\n                            <img src={logo} alt=\"Logo da Usuario\" />{' '}\r\n                        </Link>\r\n                        <Link to=\"/usuario\">\r\n                            <nav className=\"cabecalhoPrincipal-nav\">Usuário</nav>\r\n                        </Link>\r\n                        <Link to=\"/patrimonio\">\r\n                            <nav className=\"cabecalhoPrincipal-nav\">Patrimônio</nav>\r\n                        </Link>\r\n                      \r\n\r\n                        {/* <nav>*/}\r\n                        {/*    <Perfilfoto />            */}\r\n                        {/*</nav>*/}\r\n\r\n\r\n\r\n                    </div>\r\n                </header>\r\n                <main className=\"conteudoPrincipal\">\r\n                    {/* Lista de Tipos de Eventos */}\r\n                    <section className=\"conteudoPrincipal-cadastro\">\r\n                        <Titulo titulosecao={this.state.titulosecao} />\r\n\r\n                        {/* <h2 class=\"conteudoPrincipal-cadastro-titulo\">Lista de Tipos de Eventos</h2> */}\r\n\r\n                        <div className=\"container\" id=\"conteudoPrincipal-lista\">\r\n                            <table id=\"tabela-lista\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Título</th>\r\n                                        <th>Ações</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody id=\"tabela-lista-corpo\">\r\n                                    {this.state.listaUsuario.map((tipoEvento) => {\r\n                                        //console.log(tipoEvento)\r\n                                        return (\r\n                                            <tr key={tipoEvento.idTipoEvento}>\r\n                                                <td>{tipoEvento.idTipoEvento}</td>\r\n                                                <td>{tipoEvento.tituloTipoEvento}</td>\r\n\r\n                                                <td>\r\n                                                    <button\r\n                                                        onClick={() =>\r\n                                                            this.buscarTipoEventoPorId(tipoEvento)\r\n                                                        }\r\n                                                    >\r\n                                                        Editar\r\n                                                    </button>\r\n                                                    <button\r\n                                                        onClick={() => this.excluirTipoEvento(tipoEvento)}\r\n                                                    >\r\n                                                        Excluir\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/* Cadastro por Usuario */}\r\n                    <section className=\"container\" id=\"conteudoPrincipal-cadastro\">\r\n                        <Titulo titulosecao=\"Cadastro de Usuário\" />\r\n\r\n                        {/* <h2 className=\"conteudoPrincipal-cadastro-titulo\">Cadastro de Usuario</h2> */}\r\n                        <form onSubmit={this.manipularTipoEvento}>\r\n                            <div className=\"container\">\r\n                                {/* valor do state é o input */}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={this.state.titulo}\r\n                                    placeholder=\"Título do Usuario\"\r\n                                    //cada vez que tiver uma mudanca, (por tecla)\r\n                                    onChange={this.atualizaEstadoTitulo}\r\n                                />\r\n\r\n                                {/* <button type=\"submit\" >Cadastrar</button> */}\r\n\r\n                                {/* Altera o texto do botão de acordo com a operação ( edição ou cadastro ) usando if ternário */}\r\n\r\n                                {/* Estrutura de um IF Ternário\r\n                                    CONDIÇÃO ? ACONTECE ALGO CASO VERDADE : ACONTECE ALGO CASO FALSO\r\n                                */}\r\n\r\n                                {/* {\r\n                                    this.state.idTipoEventoAlterado === 0 ?\r\n                                    <button type=\"submit\">Cadastrar</button> :\r\n                                    <button type=\"submit\">Atualizar</button>\r\n                                } */}\r\n\r\n                                {/* Uma outra forma, com IF Ternário e disabled ao mesmo tempo */}\r\n\r\n                                {\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"conteudoPrincipal-btn conteudoPrincipal-btn-cadastro\"\r\n                                        disabled={this.state.titulo === '' ? 'none' : ''}\r\n                                    >\r\n                                        {this.state.idTipoEventoAlterado === 0\r\n                                            ? 'Cadastrar'\r\n                                            : 'Atualizar'}\r\n                                    </button>\r\n                                }\r\n\r\n                                {/* Faz a chamada da função limparCampos */}\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"conteudoPrincipal-btn conteudoPrincipal-btn-cadastro\"\r\n                                    onClick={this.limparCampos}\r\n                                    style={{ display: '' }}\r\n                                >\r\n                                    Cancelar\r\n                                </button>\r\n\r\n                                {/* \r\n                                    Caso algum Usuario tenha sido selecionado para edição,\r\n                                    exibe uma mensagem de feedback ao usuário\r\n                                */}\r\n\r\n                                {this.state.idTipoEventoAlterado !== 0 && (\r\n                                    <div>\r\n                                        <p>\r\n                                            O Usuario {this.state.idTipoEventoAlterado} está\r\n                                            sendo editado.\r\n                                        </p>\r\n                                        <p>\r\n                                            Clique em Cancelar caso queira cancelar a operação antes\r\n                                            de cadastrar um novo Usuario.\r\n                                        </p>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </form>\r\n                    </section>\r\n                </main>\r\n                <Rodape />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}